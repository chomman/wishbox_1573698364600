/* 
* Generated by
* 
*      _____ _          __  __      _     _
*     / ____| |        / _|/ _|    | |   | |
*    | (___ | | ____ _| |_| |_ ___ | | __| | ___ _ __
*     \___ \| |/ / _` |  _|  _/ _ \| |/ _` |/ _ \ '__|
*     ____) |   < (_| | | | || (_) | | (_| |  __/ |
*    |_____/|_|\_\__,_|_| |_| \___/|_|\__,_|\___|_|
*
* The code generator that works in many programming languages
*
*			https://www.skaffolder.com
*
*
* You can generate the code from the command-line
*       https://npmjs.com/package/skaffolder-cli
*
*       npm install -g skaffodler-cli
*
*   *   *   *   *   *   *   *   *   *   *   *   *   *   *   *
*
* To remove this comment please upgrade your plan here: 
*      https://app.skaffolder.com/#!/upgrade
*
* Or get up to 70% discount sharing your unique link:
*       https://app.skaffolder.com/#!/register?friend=5dcb97a2f1ef4518a5382d3c
*
* You will get 10% discount for each one of your friends
* 
*/
package com.wishbox.db.wishbox_db.entity.base;

/**
 * 
 * 
  _____                      _              _ _ _     _   _     _        __ _ _      
 |  __ \                    | |            | (_) |   | | | |   (_)      / _(_) |     
 | |  | | ___    _ __   ___ | |_    ___  __| |_| |_  | |_| |__  _ ___  | |_ _| | ___ 
 | |  | |/ _ \  | '_ \ / _ \| __|  / _ \/ _` | | __| | __| '_ \| / __| |  _| | |/ _ \
 | |__| | (_) | | | | | (_) | |_  |  __/ (_| | | |_  | |_| | | | \__ \ | | | | |  __/
 |_____/ \___/  |_| |_|\___/ \__|  \___|\__,_|_|\__|  \__|_| |_|_|___/ |_| |_|_|\___|
 
                                                                                   
 * DO NOT EDIT THIS FILE!! 
 *
 *  FOR CUSTOMIZE ItemBase PLEASE EDIT ../Item.java
 * 
 *  -- THIS FILE WILL BE OVERWRITTEN ON THE NEXT SKAFFOLDER CODE GENERATION --
 * 
 */
 

/**
 * This is the model of Item object
 * 
 */
 
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.Date;
import java.math.BigDecimal;


import org.springframework.jdbc.core.RowMapper;
import com.wishbox.db.wishbox_db.entity.Item;

public class ItemBase implements RowMapper<Item>{
	
	private Long _id;
	
	// Attributes
    private Date createdAt;
    private String desc;
    private Boolean isPublic;
    private String name;
	
	// Relations category
	private String category;
	
	// Relations createdBy
	private String createdBy;
	
	
	// Relations m:m tags
	private ArrayList<Long> tags;
	
	
	@Override
	public Item mapRow(ResultSet rs, int rowNum) throws SQLException {
		
		Item obj = new Item();
		try {
			obj.set_id(rs.getLong("id"));
			obj.setCreatedAt(rs.getDate("createdAt"));
			obj.setDesc(rs.getString("desc"));
			obj.setIsPublic(rs.getBoolean("isPublic"));
			obj.setName(rs.getString("name"));
			
        	
        	// Relations 1:m category
			obj.setCategory(rs.getString("category"));
        	
        	// Relations 1:m createdBy
			obj.setCreatedBy(rs.getString("createdBy"));
        	
		}
		catch(Exception e) {
			e.printStackTrace();
		}
		return obj;
	}


	public Long get_id() {
		return _id;
	}

	public void set_id(Long _id) {
		this._id = _id;
	}
	
	public Date getCreatedAt() {
		return createdAt;
	}


	public void setCreatedAt(Date createdAt) {
		this.createdAt = createdAt;
	}
	public String getDesc() {
		return desc;
	}


	public void setDesc(String desc) {
		this.desc = desc;
	}
	public Boolean getIsPublic() {
		return isPublic;
	}


	public void setIsPublic(Boolean isPublic) {
		this.isPublic = isPublic;
	}
	public String getName() {
		return name;
	}


	public void setName(String name) {
		this.name = name;
	}
	
    
    // Relations 1:m category
	public String getCategory() {
		return category;
	}

	public void setCategory(String category) {
		this.category = category;
	}
    
    // Relations 1:m createdBy
	public String getCreatedBy() {
		return createdBy;
	}

	public void setCreatedBy(String createdBy) {
		this.createdBy = createdBy;
	}
    
    
    
    
    // Relations m:m tags
	public ArrayList<Long> getTags() {
		return tags;
	}

	public void setTags(ArrayList<Long> tags) {
		this.tags = tags;
	}
	
	
	public static class Item_tags implements RowMapper<Item_tags>{
		
		private Long _id;
		
		// Relations
	
		private Long id_Item;
		private Long id_Tag;
				
		@Override
		public Item_tags mapRow(ResultSet rs, int rowNum) throws SQLException {
			
			Item_tags obj = new Item_tags();
			try {
				obj.set_id(rs.getLong("id"));
				obj.setId_Item(rs.getLong("id_Item"));
				obj.setId_Tag(rs.getLong("id_Tag"));
			}
			catch(Exception e) {
				e.printStackTrace();
			}
			return obj;
		}
		public Long get_id() {
			return _id;
		}
	
		public void set_id(Long _id) {
			this._id = _id;
		}
	
		public Long getId_Item() {
			return id_Item;
		}
	
	
		public void setId_Item(Long id_Item) {
			this.id_Item = id_Item;
		}
	
	
		public Long getId_Tag() {
			return id_Tag;
		}
	
	
		public void setId_Tag(Long id_Tag) {
			this.id_Tag = id_Tag;
		}
	}
    
}